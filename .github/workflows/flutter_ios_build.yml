name: Build iOS App for iOS without signing

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: macos-latest  # Use macOS runner

    steps:
      # Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.6'

      # Clean previous builds
      - name: Clean previous builds
        run: |
          cd federated_slm_app
          flutter clean

      # Modify Podfile for dynamic linking
      - name: Modify Podfile for dynamic linking
        run: |
          cd federated_slm_app/ios
          sed -i '' -e 's/use_frameworks!/use_frameworks! :linkage => :dynamic/' Podfile

      # Force Reinstall CocoaPods Dependencies
      - name: Reinstall CocoaPods
        run: |
          cd federated_slm_app/ios
          rm -rf Pods/ Podfile.lock
          pod install --repo-update

      # Install dependencies (flutter packages)
      - name: Install Flutter dependencies
        run: |
          cd federated_slm_app
          flutter pub get

      # Build iOS app without signing
      - name: Build iOS app without signing
        run: |
          cd federated_slm_app
          flutter build ios --no-codesign

      # Archive the iOS app (no signing)
      - name: Archive iOS app
        run: |
          cd federated_slm_app
          cd ios
          xcodebuild -workspace Runner.xcworkspace -scheme Runner -configuration Release -archivePath $PWD/build/Runner.xcarchive archive -allowProvisioningUpdates CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO

      # Find TensorFlow Lite Frameworks
      - name: Locate TensorFlow Lite Frameworks
        run: |
          ls -R federated_slm_app/ios/Pods/
          find federated_slm_app/ios/Pods/ -name "TensorFlowLiteC.framework"
          find federated_slm_app/ios/Pods/ -name "TensorFlowLiteSwift.framework"

      # Copy TensorFlow Lite Frameworks
      - name: Copy TensorFlow Lite Frameworks
        run: |
          mkdir -p federated_slm_app/ios/build/Runner.xcarchive/Products/Applications/Runner.app/Frameworks/
          cp -R $(find federated_slm_app/ios/Pods/ -name "TensorFlowLiteC.framework") federated_slm_app/ios/build/Runner.xcarchive/Products/Applications/Runner.app/Frameworks/
          cp -R $(find federated_slm_app/ios/Pods/ -name "TensorFlowLiteSwift.framework") federated_slm_app/ios/build/Runner.xcarchive/Products/Applications/Runner.app/Frameworks/

      # Verify TensorFlow Lite Frameworks
      - name: Verify TensorFlow Lite Frameworks
        run: |
          ls -R federated_slm_app/ios/build/Runner.xcarchive/Products/Applications/Runner.app/Frameworks/

      # Upload the extracted .app as artifact
      - name: Upload .app as artifact
        uses: actions/upload-artifact@v4
        with:
          name: runner-app
          path: federated_slm_app/ios/build/Runner.xcarchive/Products/Applications/Runner.app
