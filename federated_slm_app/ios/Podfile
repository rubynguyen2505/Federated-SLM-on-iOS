# Uncomment the next line to define a global platform for your project
platform :ios, '12.0'

# Ensure Flutter environment is loaded before using Flutter-specific pod installation
flutter_root = File.expand_path('..', File.dirname(__FILE__))
load File.join(flutter_root, 'ios', 'Flutter', 'podhelper.rb')

target 'Runner' do
  # Enable dynamic frameworks to properly link TensorFlow Lite
  use_frameworks! :linkage => :dynamic

  # Pods for Runner
  pod 'TensorFlowLiteC'

  # Ensure Flutter dependencies are installed
  flutter_install_all_ios_pods(File.dirname(File.realpath(__FILE__)))

  
  target 'RunnerTests' do
    inherit! :search_paths
    # Pods for testing
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['STRIP_INSTALLED_PRODUCT'] = 'NO'
      config.build_settings['STRIP_STYLE'] = 'non-global'
      config.build_settings['DEAD_CODE_STRIPPING'] = 'NO'
    end
  end

  # Force embed TensorFlowLiteC by adding it to the Runner target
  installer.aggregate_targets.each do |aggregate_target|
    next unless aggregate_target.name == 'Runner'

    aggregate_target.user_project.native_targets.each do |native_target|
      native_target.build_configurations.each do |config|
        config.build_settings['OTHER_LDFLAGS'] ||= ''
        config.build_settings['OTHER_LDFLAGS'] << ' -framework TensorFlowLiteC'
        config.build_settings['FRAMEWORK_SEARCH_PATHS'] ||= '$(inherited)'
        config.build_settings['FRAMEWORK_SEARCH_PATHS'] << ' $(PROJECT_DIR)/Pods/TensorFlowLiteC/Frameworks/TensorFlowLiteC.xcframework/ios-arm64'
      end
    end
  end
end


